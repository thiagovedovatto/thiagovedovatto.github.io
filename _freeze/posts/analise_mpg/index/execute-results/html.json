{
  "hash": "a0f69650c946c7d037b1071bcd49d50e",
  "result": {
    "markdown": "---\ntitle: \"Principais bibliotecas de análise de dados do R\"\n# author: \"Harlow Malloc\"\n# date: \"2024-12-01\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\n# Análise descritiva\n\nVamos fazer uma análise descritiva do conjunto de dados `mpg` que está contido na biblioteca `ggplot2`. Para realizar essa análise vamos carregar as bibliotecas `tidyverse` e `psych`.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\nAs variáveis contidas no conjunto de dados `mpg` podem ser vistas por meio do comando:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"manufacturer\" \"model\"        \"displ\"        \"year\"         \"cyl\"         \n [6] \"trans\"        \"drv\"          \"cty\"          \"hwy\"          \"fl\"          \n[11] \"class\"       \n```\n:::\n:::\n\n\nPara saber o significado das variáveis podemos recorrer ao comando\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelp(mpg)\n```\n:::\n\n\n\nÉ necessário classificar corretamente as variáveis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg <- mpg %>% \n  mutate(cyl = ordered(cyl,sort(unique(mpg$cyl)))) %>% \n  mutate(cty = ordered(cty,sort(unique(mpg$cty)))) %>% \n  mutate(manufacturer = factor(manufacturer)) %>% \n  mutate(model = factor(model)) %>% \n  mutate(trans = factor(trans)) %>%\n  mutate(fl = factor(fl)) %>% \n  mutate(class = factor(class))\n```\n:::\n\n\nPara observar os valores da variável `manufacturer` podemos recorrer ao comando\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  select(manufacturer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 234 × 1\n   manufacturer\n   <fct>       \n 1 audi        \n 2 audi        \n 3 audi        \n 4 audi        \n 5 audi        \n 6 audi        \n 7 audi        \n 8 audi        \n 9 audi        \n10 audi        \n# ℹ 224 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(manufacturer) %>% \n  summarise(n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 2\n   manufacturer     n\n   <fct>        <int>\n 1 audi            18\n 2 chevrolet       19\n 3 dodge           37\n 4 ford            25\n 5 honda            9\n 6 hyundai         14\n 7 jeep             8\n 8 land rover       4\n 9 lincoln          3\n10 mercury          4\n11 nissan          13\n12 pontiac          5\n13 subaru          14\n14 toyota          34\n15 volkswagen      27\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(manufacturer) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=manufacturer)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(class) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=class)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(cyl) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=cyl, y=n)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(trans) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=trans)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(drv) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=drv)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  group_by(drv,cyl) %>% \n  summarise(n = n()) %>%\n  ggplot(aes(x=n, y=drv, fill=cyl)) + \n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'drv'. You can override using the `.groups`\nargument.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}