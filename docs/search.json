[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre mim",
    "section": "",
    "text": "e-mail\n  \n  \n    \n     Github\n  \n  \n    \n     Whatsapp\n  \n\n  \n  \n\n\nProfessor no Instituto Federal de Educação, Ciência e Tecnologia de Goiás. Com passagens e projetos desenvolvidos em várias universidades como UFG, UFSCar, UnB, UFPE, USP e UFC.\nSe precisar de ajuda em suas análises estatísticas, pode contar comigo, ficarei feliz em ajudar.\n\n\nDoutor em Estatística | Universidade Federal de Pernambuco | 2018\nMestre em Estatística | Universidade de Brasília | 2014\nEspecialista em Matemática Aplicada | Universidade Federal de Goiás | 2011\nEspecialista em Inteligência Artificial | Instituto Federal de Educação, Ciência e Tecnologia de Goiás | 2024\nLicenciatura Plena em Matemática | Universidade Federal de Goiás | 2007\n\n\n\nInstituto Federal de Educação, Ciência e Tecnologia de Goiás | Professor Efetivo | 2013 - Atual\nUniversidade Federal de Goiás | Professor Substituto | 2010 - 2011\n\n\n\n\n\n\nR, RStudio & Tidyverse\nPython, Jupyter & Pandas\nGatsby, Jekyll & Quarto\nShell script & Linux\nLaTeX & TikZ\nvim/neovim/VSCodium\n\n\n\n\n\nEstatística Intermediária\nEquações Diferenciais Aplicadas\nProbabilidade\nInteligência Artificial\nMétodos Numéricos"
  },
  {
    "objectID": "posts/maxima/index.html",
    "href": "posts/maxima/index.html",
    "title": "Usando o máxima para analisar equações diferenciais",
    "section": "",
    "text": "O software Maxima é um poderoso sistema de computação algébrica para estudantes de equações diferenciais, oferecendo suporte à resolução de equações diferenciais ordinárias (EDOs), tanto de forma exata quanto numérica. Isso permite ao estudante explorar métodos de solução sem depender exclusivamente de cálculos manuais. Além disso o software é capaz de realizar manipulações algébricas e diferenciação simbólica, ajudando o estudante a entender os passos intermediários de uma solução e a validar cálculos feitos manualmente.\nO software Maxima suporta transformadas de Laplace, uma técnica fundamental para a solução de equações diferenciais, especialmente em aplicações nas áreas de engenharia e física. Ainda é possível criar gráficos em 2D e 3D, facilitando a análise visual das soluções e a compreensão do comportamento dinâmico de sistemas modelados por equações diferenciais. A linguagem Maxima apresente alta precisão e flexibilidade numérica podendo fazer uso de frações exatas, números de precisão arbitrária e números de ponto flutuante com precisão variável, minimizando erros numéricos em cálculos sensíveis.\nPor ser de código aberto, o software Maxima é obtido de forma totalmente gratuito no seu repositório oficial com versões disponíveis em múltiplos sistemas operacionais, como Windows, Linux e macOS, o que facilita seu acesso para estudantes. Além disso o máxima possui uma interface online hospedado nos servidores do Departamento de Matemática da Universidade Federal de Viçosa.\nAprender a usar o software Maxima capacita o estudante a resolver problemas complexos com eficiência, compreender conceitos abstratos por meio de exemplos práticos e se preparar para aplicações mais avançadas. Além disso, o acesso gratuito e a versatilidade da ferramenta tornam-na uma escolha ideal para projetos acadêmicos e estudos independentes.\nNesse artigo apresento alguns problemas envolvendo equações diferenciais que podem ser facilmente resolvidos com a linguagem máxima:\nProblema 1: Encontre uma solução da equação diferencial \\(y' = \\dfrac{1}{2}(y^2 -1)\\) que satisfaça a condição inicial \\(y(0) = 2\\).\nPara resolver esse problema de valor inicial (PVI) podemos recorrer ao seguinte script Maxima:\nEssa sequência de comandos precisa ser executada nessa ordem para que uma solução seja obtida. A seguir apresentamos o log de execução desse script até a obtenção da solução:\nNote que após a execução do comando em (%i2) obtemos a primeira saída em (%o2) que representa a equação diferencial apresentada no nosso problema. O segundo comando a ser executado (%i3) tem sua saída apresentada na linha (%o3) onde se encontra a solução da equação diferencial dada:\n\\[\n\\log(y - 1) - \\log(y + 1) = x + c\n\\]\nPara resolver essa expressão para \\(y\\) foi necessário contrair os logarítmos por meio do comando em (%i4) que resolva na saída (%o4):\n\\[\n\\log\\left(\\dfrac{y-1}{y+1}\\right) = x + c\n\\]\nNa sequência o comando em (%i5) apresenta uma solução na forma explícita para a equação diferencial apresentada. Note que essa solução, como esperado, apresenta uma constante \\(c\\) em aberto, pois não levamos consideração a condição de contorno \\(y(0) = 2\\) enunciada. Para obtermos o valor da constante \\(c\\) que satizfaz o PVI usamos o comando apresentado em (%i4) que apresenta como solução a função:\n\\[\ny = - \\dfrac{e^x+3}{e^x-3}\n\\]"
  },
  {
    "objectID": "posts/maxima/index.html#em-português",
    "href": "posts/maxima/index.html#em-português",
    "title": "Usando o máxima para analisar equações diferenciais",
    "section": "Em português",
    "text": "Em português\nManuais do Maxima | Página Oficial do Máxima\nManual não Oficial do Máxima | UFF\nApostila de Máxima | Grupo PET Matemática da UFSM\nO Emprego do Software Maxima no Apoio ao Ensino da Matematica | UFPB"
  },
  {
    "objectID": "posts/maxima/index.html#em-inglês",
    "href": "posts/maxima/index.html#em-inglês",
    "title": "Usando o máxima para analisar equações diferenciais",
    "section": "Em inglês",
    "text": "Em inglês\nManual Oficial | Repositório Oficial"
  },
  {
    "objectID": "posts/analise_mpg/index.html",
    "href": "posts/analise_mpg/index.html",
    "title": "Principais bibliotecas de análise de dados do R",
    "section": "",
    "text": "Análise descritiva\nVamos fazer uma análise descritiva do conjunto de dados mpg que está contido na biblioteca ggplot2. Para realizar essa análise vamos carregar as bibliotecas tidyverse e psych.\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\n\nAs variáveis contidas no conjunto de dados mpg podem ser vistas por meio do comando:\n\ncolnames(mpg)\n\n [1] \"manufacturer\" \"model\"        \"displ\"        \"year\"         \"cyl\"         \n [6] \"trans\"        \"drv\"          \"cty\"          \"hwy\"          \"fl\"          \n[11] \"class\"       \n\n\nPara saber o significado das variáveis podemos recorrer ao comando\n\nhelp(mpg)\n\nÉ necessário classificar corretamente as variáveis:\n\nmpg <- mpg %>% \n  mutate(cyl = ordered(cyl,sort(unique(mpg$cyl)))) %>% \n  mutate(cty = ordered(cty,sort(unique(mpg$cty)))) %>% \n  mutate(manufacturer = factor(manufacturer)) %>% \n  mutate(model = factor(model)) %>% \n  mutate(trans = factor(trans)) %>%\n  mutate(fl = factor(fl)) %>% \n  mutate(class = factor(class))\n\nPara observar os valores da variável manufacturer podemos recorrer ao comando\n\nmpg %>% \n  select(manufacturer)\n\n# A tibble: 234 × 1\n   manufacturer\n   <fct>       \n 1 audi        \n 2 audi        \n 3 audi        \n 4 audi        \n 5 audi        \n 6 audi        \n 7 audi        \n 8 audi        \n 9 audi        \n10 audi        \n# ℹ 224 more rows\n\n\n\nmpg %>% \n  group_by(manufacturer) %>% \n  summarise(n = n())\n\n# A tibble: 15 × 2\n   manufacturer     n\n   <fct>        <int>\n 1 audi            18\n 2 chevrolet       19\n 3 dodge           37\n 4 ford            25\n 5 honda            9\n 6 hyundai         14\n 7 jeep             8\n 8 land rover       4\n 9 lincoln          3\n10 mercury          4\n11 nissan          13\n12 pontiac          5\n13 subaru          14\n14 toyota          34\n15 volkswagen      27\n\n\n\nmpg %>% \n  group_by(manufacturer) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=manufacturer)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\n\nmpg %>% \n  group_by(class) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=class)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\n\nmpg %>% \n  group_by(cyl) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=cyl, y=n)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\n\nmpg %>% \n  group_by(trans) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=trans)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\n\nmpg %>% \n  group_by(drv) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x=n, y=drv)) + \n  geom_bar(stat = \"identity\")\n\n\n\n\n\nmpg %>% \n  group_by(drv,cyl) %>% \n  summarise(n = n()) %>%\n  ggplot(aes(x=n, y=drv, fill=cyl)) + \n  geom_bar(stat = \"identity\")\n\n`summarise()` has grouped output by 'drv'. You can override using the `.groups`\nargument."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thiago VedoVatto",
    "section": "",
    "text": "Usando o máxima para analisar equações diferenciais\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPrincipais bibliotecas de análise de dados do R\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  }
]